name: Build and Publish

on:
  push:
    tags:
      - 'v*' # Trigger only on tags that start with 'v'
    branches:
      - main # Trigger on pushes to the main branch for commit message filtering
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Verify commit message for "build_releases"
    - name: Check Commit Message
      run: |
        if ! git log -1 --pretty=%B | grep -iq "build_releases"; then
          echo "Commit message does not contain 'build_releases'. Skipping build."
          exit 0
        fi

    # Setup .NET environment
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0' # Adjust to your required .NET version

    # Install vpk tool
    - name: Install VPK (Linux only)
      run: dotnet tool install --global vpk

    # Add dotnet tools to PATH
    - name: Update PATH for Dotnet Tools
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    # Build for Linux
    - name: Build for Linux
      run: |
        cd src
        dotnet publish -c Release --self-contained -r linux-x64 -o ../publish/linux
        vpk pack -u VoiceRecogniseBot-linux -v ${{ github.ref_name }} -p ../publish/linux

    # Build for Windows
    - name: Build for Windows
      run: |
        cd src
        dotnet publish -c Release --self-contained -r win-x64 -o ../publish/windows

    # Build for macOS
    - name: Build for macOS
      run: |
        cd src
        dotnet publish -c Release --self-contained -r osx-x64 -o ../publish/macos

    # Upload all artifacts
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: VoiceRecogniseBot-${{ github.ref_name }}
        path: ./publish

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Download artifacts
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: VoiceRecogniseBot-${{ github.ref_name }}

    # Create GitHub release and upload artifacts
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          This is the release for version ${{ github.ref_name }}.
          - Built for Linux, Windows, and macOS.
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish
        asset_name: VoiceRecogniseBot-${{ github.ref_name }}.zip
        asset_content_type: application/zip
